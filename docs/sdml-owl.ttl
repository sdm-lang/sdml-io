# -------------------------------------------------------------------
#
# Project:    tree-sitter-sdml
# Author:     Simon Johnston <johntonskj@gmail.com>
# Version:    0.1.10
# Repository: https://github.com/johnstonskj/tree-sitter-sdml
# License:    Apache 2.0 (see LICENSE file)
# Copyright:  Copyright (c) 2023 Simon Johnston
#
# -------------------------------------------------------------------

@prefix : <https://sdml.io/sdml-owl.ttl#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@base <https://sdml.io/sdml-owl.ttl#> .

<https://sdml.io/sdml-owl.ttl#>
    rdf:type owl:Ontology ;
    skos:prefLabel "Simple Domain Modeling Language"@en ;
    skos:altLabel "SDML"@en ;
    dc:hasVersion "0.1.8" ;
    dc:creator "Simon Johnston <johntonskj@gmail.com>" ;
    dc:license <https://sdml.io/LICENSE> ;
    rdf:seeAlso <https://sdml.io/> .

# -------------------------------------------------------------------
# Classes ❱ Module
# -------------------------------------------------------------------

:ModelElement rdf:type owl:Class ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Model Element"@en ;
    skos:definition
        "A first-class named individual of a model element type."@en.

:name rdf:type owl:DatatypeProperty ;
    rdfs:domain :ModelElement ;
    rdfs:range :Name ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "name"@en ;
    skos:definition
        "The scope-unique name of a model element."@en.


:Name rdf:type rdfs:Datatype ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions (
        [
            xsd:pattern "[\p{Lu}\p{Ll}][\p{Lu}\p{Ll}\p{Nd}]*(_[\p{Lu}\p{Ll}\p{Nd}]+)*"
        ]
    ) ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "A name, or identifier, for a model element."@en .

# -------------------------------------------------------------------
# Classes ❱ Module
# -------------------------------------------------------------------

:Module rdf:type owl:Class ;
    rdfs:subClassOf :ModelElement ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Module"@en ;
    skos:definition
        "A named container of type definitions."@en.

# -------------------------------------------------------------------
# Classes ❱ Classifiers
# -------------------------------------------------------------------

:Classifier rdf:type owl:Class ;
    rdfs:subClassOf :ModelElement ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Classifier"@en ;
    skos:altLabel "Type"@en ;
    skos:definition
        "The base type of all type definitions."@en .

:Datatype rdf:type owl:Class ;
    rdfs:subClassOf :Classifier ;
    rdfs:subClassOf rdfs:Datatype ;
    owl:disjointWith
        :Enumeration ,
        :Structure ,
        :Union ,
        :Unknown ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Datatype"@en ;
    skos:altLabel "Data Type"@en ;
    skos:definition
        "A type that expresses constraints over an existing data type."@en .

:Entity rdf:type owl:Class ;
    rdfs:subClassOf :Structure ;
    owl:disjointWith
        :Event ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Entity"@en ;
    skos:altLabel "Independent Entity" ;
    skos:definition
        "An Entity is a named record type that has it's own identity and lifecycle."@en .

:Enumeration rdf:type owl:Class ;
    rdfs:subClassOf :Classifier ;
    owl:disjointWith
        :Datatype ,
        :Structure ,
        :Union ,
        :Unknown ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Enumeration"@en ;
    skos:definition
        "An enumeration is a type that has a set of distinct variant values."@en .

:Event rdf:type owl:Class ;
    rdfs:subClassOf :Structure ;
    owl:disjointWith :Entity ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Event"@en ;
    skos:altLabel "Entity Event"@en ;
    skos:definition
        "An event is a named record type signaled by an Entity when some state changes."@en .

:Structure rdf:type owl:Class ;
    rdfs:subClassOf :Classifier ;
    owl:disjointWith
        :Datatype ,
        :Enumeration ,
        :Union ,
        :Unknown ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Structure"@en ;
    skos:altLabel "Struct"@en ;
    skos:altLabel "Record"@en ;
    skos:definition
        "A structure is a named record type that does not have it's own identity or lifecycle"@en .

:Union rdf:type owl:Class ;
    rdfs:subClassOf :Classifier ;
    owl:disjointWith
        :Datatype ,
        :Enumeration ,
        :Structure ,
        :Unknown ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Disjoint Union"@en ;
    skos:altLabel "Tagged Union"@en ;
    skos:altLabel "Union"@en ;
    skos:definition
        "A union is a list of discrete types."@en .

:Unknown rdf:type owl:Class ;
    rdfs:subClassOf :Classifier ;
    owl:disjointWith
        :Datatype ,
        :Enumeration ,
        :Structure ,
        :Union ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Unknown" ;
    skos:altLabel "Unknown Type"@en ;
    skos:definition
        "The unknown type, used as a marker in incomplete members."@en .

# -------------------------------------------------------------------
# Classes ❱ Classifier ❱ Groups
# -------------------------------------------------------------------

:Group rdf:type owl:Class ;
    rdfs:subClassOf :ModelElement ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Group of Members"@en ;
    skos:definition
        "A group of members within a record type."@en .

:EntityGroup rdf:type owl:Class ;
    rdfs:subClassOf :Group ;
    owl:disjointWith :StructureGroup ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Entity Group"@en ;
    skos:definition
        "A group of members within an Entity."@en .

:StructureGroup rdf:type owl:Class ;
    rdfs:subClassOf :Group ;
    owl:disjointWith :EntityGroup ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Structure Group"@en ;
    skos:definition
        "A group of members within a Structure, or Event."@en .

# -------------------------------------------------------------------
# Classes ❱ Classifier ❱ Members
# -------------------------------------------------------------------

:Member rdf:type owl:Class ;
    rdfs:subClassOf :ModelElement ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Member of Type"@en ;
    skos:definition
        "A member of a record type."@en .

:IdentityMember rdf:type owl:Class ;
    rdfs:subClassOf :Member ;
    owl:disjointWith :ByValueMember , :ByReferenceMember ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Identity Member"@en ;
    skos:definition
        "The identity member of an Entity."@en .

:ByValueMember rdf:type owl:Class ;
    rdfs:subClassOf :Member ;
    owl:disjointWith :IdentityMember , :ByReferenceMember ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "By-Value Member"@en ;
    skos:definition
        "A member that represents an aggregate component."@en .

:ByReferenceMember rdf:type owl:Class ;
    rdfs:subClassOf :Member ;
    owl:disjointWith :IdentityMember , :ByValueMember ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "By-Reference Member"@en ;
    skos:definition
        "A member that represents a non-aggregate component."@en .

:Cardinality rdf:type owl:Class ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "Cardinality"@en ;
    skos:definition
        "The cardinality of a member expression."@en .

:Variant rdf:type owl:Class ;
   rdfs:isDefinedBy : ;
    skos:prefLabel "Enumeration Variant"@en ;
    skos:definition
        "A variant within an Enumeration."@en .

# -------------------------------------------------------------------
# Properties ❱ Object ❱ Definitions
# -------------------------------------------------------------------

:hasDefinition rdf:type owl:ObjectProperty ;
    owl:inverseOf :isDefinedBy ;
    rdfs:domain :Module ;
    rdfs:Range :Classifier ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "module has definition"@en ;
    skos:definition
        "Relates a module to an enclosed type definition."@en .

:isDefinedBy  rdf:type owl:ObjectProperty ;
    rdfs:isSubPropertyOf rdfs:isDefinedBy ;
    owl:inverseOf :hasDefinition ;
    rdfs:domain :Classifier ;
    rdfs:Range :Module ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "defined by module"@en ;
    skos:definition
        "Relates a type definition to the enclosing module."@en .

# -------------------------------------------------------------------
# Properties ❱ Object ❱ Datatypes
# -------------------------------------------------------------------

:baseDatatype rdf:type owl:ObjectProperty ;
    rdfs:domain :Datatype ;
    rdfs:range [
        owl:unionOf ( :Datatype rdfs:Datatype )
        ] ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "base datatype"@en ;
    skos:definition
        "The datatype to restrict to create a new type."@en .

# -------------------------------------------------------------------
# Properties ❱ Object ❱ Events
# -------------------------------------------------------------------

:eventSource rdf:type owl:ObjectProperty ;
    owl:inverseOf :emitsEvent ;
    rdfs:domain :Event ;
    rdfs:range :Entity ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "event source entity"@en ;
    skos:definition
        "The source entity for a given event type."@en .

:emitsEvent rdf:type owl:ObjectProperty ;
    owl:inverseOf :eventSource ;
    rdfs:domain :Entity ;
    rdfs:range :Event ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "entity emits event"@en ;
    skos:definition
        "An event generated by the source entity."@en .

# -------------------------------------------------------------------
# Properties ❱ Object ❱ Groups
# -------------------------------------------------------------------

:hasGroup rdf:type owl:ObjectProperty ;
    rdfs:range :Group ;
    owl:inverseOf :groupWithin ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "structure has group"@en ;
    skos:definition
        "Relates a classifier to an owned group."@en .

:groupWithin rdf:type owl:ObjectProperty ;
    rdfs:domain :Group ;
    owl:inverseOf :hasGroup ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "structure has group"@en ;
    skos:definition
        "Relates a classifier to an owned group."@en .

:structureHasGroup rdf:type owl:ObjectProperty ;
    rdfs:subPropertyOf :hasGroup ;
    rdfs:domain :Structure ;
    rdfs:range :StructureGroup ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "structure has group"@en ;
    skos:definition
        "Relates a Structure to an owned group."@en .

:entityHasGroup rdf:type owl:ObjectProperty ;
    rdfs:subPropertyOf :hasGroup ;
    rdfs:domain :Entity ;
    rdfs:range :EntityGroup ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "entity has group"@en ;
    skos:definition
        "Relates an Entity to an owned group."@en .

# -------------------------------------------------------------------
# Properties ❱ Object ❱ Variants
# -------------------------------------------------------------------

:hasValueVariant rdf:type owl:ObjectProperty ;
    owl:inverseOf :isValueVariantOf ;
    rdfs:domain :Enumeration ;
    rdfs:range :Variant ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "has value variant"@en ;
    skos:definition
        "Relates an enumeration to an owned value variant."@en .

:isValueVariantOf rdf:type owl:ObjectProperty ;
    owl:inverseOf :hasValueVariant ;
    rdfs:domain :Variant ;
    rdfs:range :Enumeration ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "is value variant of"@en ;
    skos:definition
        "Relates a value variant to it's owning enumeration."@en .

# -------------------------------------------------------------------
# Properties ❱ Object ❱ Unions
# -------------------------------------------------------------------

:hasTypeVariant rdf:type owl:ObjectProperty ;
    rdfs:domain :Union ;
    rdfs:range :Classifier ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "has element type"@en ;
    skos:definition
        "Relates a union to an owned type variant."@en .

:isTypeVariantOf rdf:type owl:ObjectProperty ;
    owl:inverseOf :hasTypeVariant ;
    rdfs:range :Union ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "is type variant of"@en ;
    skos:definition
        "Relates a type variant to it's owning union."@en .

# -------------------------------------------------------------------
# Properties ❱ Object ❱ Members
# -------------------------------------------------------------------

:targetClassifier rdf:type owl:ObjectProperty ;
    rdfs:domain :Member ;
    rdfs:range :Classifier ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "target classifier"@en ;
    skos:definition ""@en .

:hasMember rdf:type owl:ObjectProperty ;
    owl:inverseOf :isMemberOf ;
    rdfs:range :Member ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "has member"@en ;
    skos:definition ""@en .

:isMemberOf rdf:type owl:ObjectProperty ;
    owl:inverseOf :hasMember ;
    rdfs:domain :Member ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "is member"@en ;
    skos:definition ""@en .

:hasIdentityMember rdf:type owl:ObjectProperty ;
    rdf:type owl:FunctionalProperty ;
    rdfs:subPropertyOf :hasMember ;
    rdfs:domain :Entity ;
    rdfs:range :IdentityMember ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "has identity member"@en ;
    skos:definition ""@en .

:hasByValueMember rdf:type owl:ObjectProperty ;
    rdfs:subPropertyOf :hasMember ;
    rdfs:domain [
        owl:unionOf ( :Entity :EntityGroup :Event :Structure :StructureGroup )
    ] ;
    rdfs:range :ByValueMember ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "has by-value identifier"@en ;
    skos:definition ""@en .

:hasByReferenceMember rdf:type owl:ObjectProperty ;
    rdfs:subPropertyOf :hasMember ;
    rdfs:domain [
        owl:unionOf ( :Entity :EntityGroup )
    ] ;
    rdfs:range :ByReferenceMember ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "has by-reference member"@en ;
    skos:definition ""@en .

:targetClassifier rdf:type owl:ObjectProperty ;
    rdfs:domain :Member ;
    rdfs:range [
        owl:unionOf ( :Classifier :Unknown )
    ] ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "target classifier"@en ;
    skos:definition "The type of the member."@en .

:sourceCardinality rdf:type owl:ObjectProperty ;
    rdfs:domain :ByReferenceMember ;
    rdfs:range :Cardinality ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "source classifier cardinality"@en ;
    skos:definition
        "The cardinality of this classifier when referenced from the target."@en .

:targetCardinality rdf:type owl:ObjectProperty  ;
    rdfs:domain [
        owl:unionOf ( :ByValueMember :ByReferenceMember )
    ] ;
    rdfs:range  :Cardinality ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "target classifier cardinality"@en ;
    skos:definition
        "The cardinality of the target classifier for this member."@en .

# -------------------------------------------------------------------
# Properties ❱ Datatype ❱ Cardinality
# -------------------------------------------------------------------

:minOccurs rdf:type owl:DatatypeProperty ;
    rdfs:domain :Cardinality ;
    rdfs:range xsd:nonNegativeInteger ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "minimum occurences"@en ;
    skos:definition
        "Identifies the minimum occurence of a member the default is zero."@en .

:maxOccurs rdf:type owl:DatatypeProperty ;
    rdfs:domain :Cardinality ;
    rdfs:range xsd:nonNegativeInteger ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "maximum occurences"@en ;
    skos:definition
        "Identifies the maximum occurence of a member; the default is unbounded."@en .

# -------------------------------------------------------------------
# Properties ❱ Datatype ❱ Variants
# -------------------------------------------------------------------

:hasValue rdf:type owl:DatatypeProperty ;
    rdfs:subPropertyOf rdf:value ;
    rdfs:domain :Variant ;
    rdfs:range xsd:nonNegativeInteger ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "has value"@en ;
    skos:definition
        "Relates an enumeration variant to a numeric value."@en .

# -------------------------------------------------------------------
# Properties ❱ Annotation ❱ Entities
# -------------------------------------------------------------------

:rootEntity rdf:type owl:AnnotationProperty ;
    rdfs:domain :Module ;
    rdfs:range :Entity ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "root entity"@en ;
    skos:definition
        "Denotes, if present, one or more root entities within this module."@en .

# -------------------------------------------------------------------
# Properties ❱ Annotation ❱ Variants
# -------------------------------------------------------------------

:variantTransform rdf:type owl:AnnotationProperty ;
    rdfs:domain :EnumerationVariant ;
    rdfs:range owl:oneOf (
        "anonymous"^^xsd:string
        "named"^^xsd:string
    ) ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "transformation form"@en ;
    skos:definition
        "Specified the form to use when transforming to RDF."@en .

:defaultVariant rdf:type owl:AnnotationProperty ;
    rdfs:domain :Enumeration ;
    rdfs:range xsd:anyURI ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "default variant URI"@en ;
    skos:definition
        "Denotes, if present, the default variant of an enumeration."@en .

# -------------------------------------------------------------------
# Properties ❱ Annotation ❱ Model Versioning
# -------------------------------------------------------------------

:versionString rdf:type rdfs:Datatype ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions (
        [ xsd:pattern "(0|[1-9][0-9]*)(\.0|[1-9][0-9]*){,2}" ]
    ) ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "A semvar-like version string."@en .

:deprecatedSince rdf:type owl:DatatypeProperty owl:AnnotationProperty ;
    rdfs:domain :ModelElement ;
    rdfs:range :versionString ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "deprecate since version"@en ;
    skos:definition
        "The specific version at which this model element was deprecated."@en .

:introducedIn rdf:type owl:DatatypeProperty owl:AnnotationProperty ;
    rdfs:domain :ModelElement ;
    rdfs:range :versionString ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "introduced in version"@en ;
    skos:definition "The specific version this model element was introduced."@en .

# -------------------------------------------------------------------
# Properties ❱ Annotation ❱ Entity Versioning
# -------------------------------------------------------------------

:hasVersioningStyle rdf:type owl:AnnotationProperty ;
    rdfs:domain :Entity ;
    rdfs:range :VersioningStyle ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "has versioning style"@en ;
    skos:definition
        "Denotes that this is a versioned entity, using the applied style."@en .

:hasVersionIdType rdf:type owl:AnnotationProperty ;
    rdfs:domain :Entity ;
    rdfs:range  [
        owl:unionOf ( :Datatype :Structure )
    ] ;
    rdfs:isDefinedBy : ;
    skos:prefLabel "has versioning identifier type"@en ;
    skos:definition
        "Denotes the type of the version identifier."@en .

:VersioningStyle rdf:type rdfs:DataRange ;
    owl:oneOf (
        "Immutable"
        "Snapshot"^^xsd:string
        "Mutable"^^xsd:string
    ) ;
    skos:prefLabel "Versioning Style"@en .
