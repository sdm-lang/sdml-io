#+TITLE: Simple Domain Modeling Language
#+SUBTITLE: Language Error Codes
#+AUTHOR: Simon Johnston
#+EMAIL: johnstonskj@gmail.com
#+LANGUAGE: en
#+STARTUP: overview hidestars inlineimages entitiespretty
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../rtd-sdml.css"/>
#+OPTIONS: toc:3


#+BEGIN_SRC emacs-lisp :exports none
(require 'ebnf-mode)
(require 'ob-sdml)
#+END_SRC

This page provides a reference to the errors, warnings, and informational messages defined in the =sdml_error= crate and
output by the =sdml= command-line tool.

* Bugs

This category represents bugs in the command-line tool where it's parser receives unexpected nodes from the underlyiung
tree-sitter parser.

** B01: Tree-Sitter Error Node
:PROPERTIES:
:CUSTOM_ID: B0001
:END:

If the tree-sitter parser itself cannot parse some content it inserts an =error= node in the tree. When the SDML parser
encounters such a node it is clearly a defect in the underlying source, but we don't yet know what.

The =Diagnostic= for this error will attempt to record the file ID, location, and the name of any rule the parser was
processing when the error node was found.

** B02: Tree-Sitter Unexpected Node
:PROPERTIES:
:CUSTOM_ID: B0002
:END:

The =Diagnostic= for this error will attempt to record the file ID, location, and the name of any expected nodes along
with the name of the node found.

** B03: Tree-Sitter Missing Node
:PROPERTIES:
:CUSTOM_ID: B0003
:END:

The =Diagnostic= for this error will attempt to record the file ID, location, and the name of any expected nodes along
with the name of any variable that might have contained the expected node.

** B03: Tree-Sitter Missing Variable
:PROPERTIES:
:CUSTOM_ID: B0004
:END:

The =Diagnostic= for this error will attempt to record the file ID, location, and the name of the expected variable along
with the name of the node kind that should have contained the expected variable.


* Errors

This category represents errors in module loading, in parsing a complete tree-sitter tree, or in module validation.

** E100: ModuleNotFound
:PROPERTIES:
:CUSTOM_ID: E0100
:END:

An attempt to load a module failed, specifically a module that was loaded directly, not from another module's import
statements.

*** Example

#+BEGIN_EXAMPLE
$ sdml validate orl

error[E0101]: module not found
 = for more details, see <https://sdml.io/errors/#E0101>
 = module name `orl`
#+END_EXAMPLE

** E101: ImportedModuleNotFound
:PROPERTIES:
:CUSTOM_ID: E0101
:END:

An attempt to load a module listed in another module's import statement failed.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  import other

end
#+END_SRC

#+BEGIN_EXAMPLE
error[E0101]: module in import statement not found
  ┌─ examples/errors/e0101.sdm:3:10
  │
3 │   import other
  │          ^^^^^ this import
  │
  = for more details, see <https://sdml.io/errors/#E0101>
#+END_EXAMPLE

** E102: ModuleVersionNotFound
:PROPERTIES:
:CUSTOM_ID: E0102
:END:

TBD

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  import nonversioned_other <https://example.com/api/v2>

end
#+END_SRC

#+BEGIN_SRC sdml :exports code :eval never
module nonversioned_other <https://example.com/api> is
end
#+END_SRC

#+BEGIN_EXAMPLE
error[E0102]: imported module has no version URI
  ┌─ examples/errors/e0102.sdm:3:10
  │
3 │   import nonversioned_other <https://example.com/api/v2>
  │          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this import
  │
  ┌─ ./examples/errors/nonversioned_other.sdm:1:1
  │  
1 │ ╭ module nonversioned_other <https://example.com/api> is
2 │ │ end
3 │ │ 
  │ ╰' this module
  │  
  = help: for more details, see <⁨https://sdml.io/errors/#E0102⁩>"
#+END_EXAMPLE

** E103: ModuleVersionMismatch
:PROPERTIES:
:CUSTOM_ID: E0103
:END:

TBD

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  import versioned_other <https://example.com/api/v3>

end
#+END_SRC

#+BEGIN_SRC sdml :exports code :eval never
module versioned_other <https://example.com/api>
       version "v2" <https://example.com/api/v2> is
end
#+END_SRC

#+BEGIN_EXAMPLE
error[E0103]: actual module URI does not match import requirement
  ┌─ examples/errors/e0103.sdm:3:26
  │
3 │   import versioned_other <https://example.com/api/v3>
  │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected this version URI
  │
  ┌─ ./examples/errors/versioned_other.sdm:2:21
  │
2 │        version "v2" <https://example.com/api/v2> is
  │                     ---------------------------- module contained this version URI
  │
  = help: for more details, see <⁨https://sdml.io/errors/#E0103⁩>"
#+END_EXAMPLE

** E104: DuplicateDefinitionName
:PROPERTIES:
:CUSTOM_ID: E0104
:END:

A module contains multiple definitions with the same name. A module is a namespace meaning that all definitions within
it *must* have unique names (identifiers).

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  structure Foo

  structure Bar

  structure Foo

end
#+END_SRC

#+BEGIN_EXAMPLE
error[E0104]: a definition with this name already exists
  ┌─ examples/errors/e0104.sdm:3:13
  │
3 │   structure Foo
  │             ^^^ this definition name
  ·
7 │   structure Foo
  │             --- was previously defined here
  │
  = for more details, see <https://sdml.io/errors/#E0104>

error: module `example` generated 1 errors.
#+END_EXAMPLE

** E105: DuplicateMemberName
:PROPERTIES:
:CUSTOM_ID: E0105
:END:

An entity, event, or structure definition contains multiple members with the same name. A definition is a namespace
meaning that all members within it *must* have unique names (identifiers).

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  structure Foo is
    foo -> string
    bar -> integer
    foo -> boolean
  end

end
#+END_SRC

#+BEGIN_EXAMPLE
error[E0105]: a member with this name already exists
  ┌─ examples/errors/e0105.sdm:6:5
  │
4 │     foo -> string
  │     --- was previously defined here
5 │     bar -> integer
6 │     foo -> boolean
  │     ^^^ this member name
  │
  = for more details, see <https://sdml.io/errors/#E0105>

error: module `example` generated 1 errors.
#+END_EXAMPLE

** E106: DuplicateVariantName
:PROPERTIES:
:CUSTOM_ID: E0106
:END:

An enum or union definition contains multiple variants with the same name. A definition is a namespace meaning that all
variants within it *must* have unique names (identifiers).

*** Example Value Variant

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  enum EnumFoo of
    Foo
    Bar
    Foo
  end

end
#+END_SRC

#+BEGIN_EXAMPLE
error[E0104]: a variant with this name already exists
  ┌─ examples/errors/e0106-union.sdm:6:5
  │
4 │     Foo
  │     --- was previously defined here
5 │     Bar
6 │     Foo
  │     ^^^ this variant name
  │
  = for more details, see <https://sdml.io/errors/#E0104>

error: module `example` generated 1 errors.
#+END_EXAMPLE

*** Example Type Variant

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  union UnionFoo of
    Foo
    Bar
    Foo
  end

end
#+END_SRC

#+BEGIN_EXAMPLE
error[E0104]: a variant with this name already exists
  ┌─ examples/errors/e0106-union.sdm:6:5
  │
4 │     Foo
  │     --- was previously defined here
5 │     Bar
6 │     Foo
  │     ^^^ this variant name
  │
  = for more details, see <https://sdml.io/errors/#E0104>

error: module `example` generated 1 errors.
#+END_EXAMPLE

*** Example Type Variant Rename

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  union UnionFoo of
    Foo
    Bar
    Boo as Foo
  end

end
#+END_SRC

#+BEGIN_EXAMPLE
error[E0104]: a variant with this name already exists
  ┌─ examples/errors/e0106-rename.sdm:6:12
  │
4 │     Foo
  │     --- was previously defined here
5 │     Bar
6 │     Boo as Foo
  │            ^^^ this variant name
  │
  = for more details, see <https://sdml.io/errors/#E0104>

error: module `example` generated 1 errors.
#+END_EXAMPLE

** E107: InvalidIdentifier
:PROPERTIES:
:CUSTOM_ID: E0107
:END:

API only.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE

** E108: InvalidLanguageTag
:PROPERTIES:
:CUSTOM_ID: E0108
:END:

API only.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE

** E109: InvalidValueForType
:PROPERTIES:
:CUSTOM_ID: E0109
:END:

TBD

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE

** E110: InvalidModuleBaseUrl
:PROPERTIES:
:CUSTOM_ID: E0110
:END:

API only.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE

** E111: InvalidModuleVersionInfo
:PROPERTIES:
:CUSTOM_ID: E0111
:END:

TBD

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE

** E112: InvalidModuleVersionUrl
:PROPERTIES:
:CUSTOM_ID: E0112
:END:

API only.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE

** E113: DefinitionNotFound
:PROPERTIES:
:CUSTOM_ID: E0113
:END:

TBD

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE


* Warnings

** W301: ModuleAlreadyImported
:PROPERTIES:
:CUSTOM_ID: W0301:
:END:

An import statement includes a module already imported. This is a warning because the loader will not attempt to
re-parse the same module, but it's more than just bad style.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  import owl
  import [ dc xsd owl owl ]

end
#+END_SRC

#+BEGIN_EXAMPLE
warning[W0301]: duplicate import of module
  ┌─ examples/errors/W0301.sdm:5:19
  │
3 │   import owl
  │          --- was previously imported here
4 │ 
5 │   import [ dc xsd owl owl ]
  │                   ^^^ this module
  │
  = for more details, see <https://sdml.io/errors/#W0301>

warning[W0301]: duplicate import of module
  ┌─ examples/errors/W0301.sdm:5:23
  │
3 │   import owl
  │          --- was previously imported here
4 │ 
5 │   import [ dc xsd owl owl ]
  │                       ^^^ this module
  │
  = for more details, see <https://sdml.io/errors/#W0301>

warning: module `example` generated 2 warnings.
#+END_EXAMPLE

** W302: MemberAlreadyImported
:PROPERTIES:
:CUSTOM_ID: W0302
:END:

An import statement includes a member already imported. This is a warning because the loader will not attempt to
re-parse the same module to access the same member, but it's more than just bad style.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  import owl:Class
  import [ dc xsd owl:Class ]

end
#+END_SRC

#+BEGIN_EXAMPLE
warning[W0302]: duplicate import of member
  ┌─ examples/errors/W0302.sdm:5:19
  │
3 │   import owl:Class
  │          --------- was previously imported here
4 │ 
5 │   import [ dc xsd owl:Class ]
  │                   ^^^^^^^^^ this member
  │
  = for more details, see <https://sdml.io/errors/#W0302>

warning: module `example` generated 1 warnings.
#+END_EXAMPLE

** W303: ValidationIncomplete
:PROPERTIES:
:CUSTOM_ID: W0303
:END:

TBD

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE


* Informational

** I500: IncompleteModule
:PROPERTIES:
:CUSTOM_ID: I0500:
:END:

The module is /incomplete/ as one or more definitions is incomplete.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  structure Foo

end
#+END_SRC

#+BEGIN_EXAMPLE
note[I0500]: this module is incomplete
  ┌─ examples/errors/i0500.sdm:1:1
  │  
1 │ ╭ module example <https://example.com/api> is
2 │ │ 
3 │ │   structure Foo
4 │ │ 
5 │ │ end
6 │ │ 
  │ ╰^ this module
  │  
  = help: for more details, see <⁨https://sdml.io/errors/#I0500⁩>"
#+END_EXAMPLE

** I501: IncompleteDefinition
:PROPERTIES:
:CUSTOM_ID: I0501:
:END:

The definition is /incomplete/ as it has no body, or as one or more members or variants is incomplete.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  structure Foo

end
#+END_SRC

#+BEGIN_EXAMPLE
note[I0501]: this definition is incomplete
  ┌─ examples/errors/i0500.sdm:3:3
  │
3 │   structure Foo
  │   ^^^^^^^^^^^^^ this definition
  │
  = help: for more details, see <⁨https://sdml.io/errors/#I0501⁩>"
#+END_EXAMPLE

** I502: IncompleteMember
:PROPERTIES:
:CUSTOM_ID: I0502
:END:

The member is /incomplete/ as it's type is declared as =unknown=.

*** Example

#+BEGIN_SRC sdml :exports code :eval never
module example <https://example.com/api> is

  structure Foo is
    bar -> unknown
  end

end
#+END_SRC

#+BEGIN_EXAMPLE
note[I0502]: this member is incomplete
  ┌─ examples/errors/i0502.sdm:4:5
  │
4 │     bar -> unknown
  │     ^^^^^^^^^^^^^^ this member
  │
  = help: for more details, see <⁨https://sdml.io/errors/#I0502⁩>"
#+END_EXAMPLE

** I503: StringWithoutLanguage
:PROPERTIES:
:CUSTOM_ID: I0503
:END:

TBD

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE

** I504: UnconstrainedDatatype
:PROPERTIES:
:CUSTOM_ID: I0504
:END:

TBD

*** Example

#+BEGIN_SRC sdml :exports code :eval never
#+END_SRC

#+BEGIN_EXAMPLE
#+END_EXAMPLE
